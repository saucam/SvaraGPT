[project]
name = "tvarallm"
dynamic = ["version"]
description = "TvaraLLM: A high-performance, minimalistic framework for LLM workflows"
readme = "README.md"
authors = [
    {name = "Yash Datta", email = "yd2590@columbia.edu"},
]
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache 2.0 License",
    "Operating System :: OS Independent",
]
keywords = ["LLM", "AI", "NLP", "machine learning", "inference", "distributed"]
dependencies = [
    "torch>=2.2.0",
    "tqdm>=4.66.0",
    "pyyaml>=5.4",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "pydantic>=1.8.2",
]
requires-python = ">=3.10"

[project.urls]
Homepage = "https://github.com/saucam/TvaraLLM"
"Bug Tracker" = "https://github.com/saucam/TvaraLLM/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "mypy>=0.910",
    "flake8>=3.9",
    "black>=21.9b0",
    "isort>=5.12.0",
    "pre-commit",
]

[build-system]
requires = ["setuptools>=68.2.2", "wheel>=0.41.2", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "--cov=tvarallm"
testpaths = [
    "tests",
]

[tool.setuptools_scm]
write_to = "tvarallm/_version.py"

[tool.setuptools]
packages = ["tvarallm"]

[tool.mypy]
mypy_path = "tvarallm"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 100
